{"ast":null,"code":"var _jsxFileName = \"/app/src/components/TaskPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const [overdueTasks, setOverdueTasks] = useState([]);\n  const [todaysTasks, setTodaysTasks] = useState([]);\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    fetch(\"http://localhost:5001/tasks\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      setOverdueTasks(data.overdue || []);\n      setTodaysTasks(data.today || []);\n      setUpcomingTasks(data.upcoming || []);\n    }).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, []);\n  const toggleTaskStatus = async taskId => {\n    const updateTaskInList = tasks => tasks.map(task => task.task_id === taskId ? {\n      ...task,\n      status: task.status === \"not done\" ? \"completed\" : \"not done\"\n    } : task);\n    setOverdueTasks(prevTasks => updateTaskInList(prevTasks));\n    setTodaysTasks(prevTasks => updateTaskInList(prevTasks));\n    setUpcomingTasks(prevTasks => updateTaskInList(prevTasks));\n    await fetch(`http://localhost:5001/tasks/${taskId}/toggle`, {\n      method: \"PATCH\",\n      credentials: true\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Task updated:\", data);\n    }).catch(error => {\n      console.error(\"Error updating task status:\", error);\n      setOverdueTasks(prevTasks => updateTaskInList(prevTasks));\n      setTodaysTasks(prevTasks => updateTaskInList(prevTasks));\n      setUpcomingTasks(prevTasks => updateTaskInList(prevTasks));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"today-tasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today's Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todaysTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `task-status ${task.status === \"completed\" ? \"completed\" : \"not-done\"}`,\n              onClick: () => toggleTaskStatus(task.task_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, task.task_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"overdue-tasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overdue Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: overdueTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `task-status ${task.status === \"completed\" ? \"completed\" : \"not-done\"}`,\n              onClick: () => toggleTaskStatus(task.task_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, task.task_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"upcoming-tasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: upcomingTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `task-status ${task.status === \"completed\" ? \"completed\" : \"not-done\"}`,\n              onClick: () => toggleTaskStatus(task.task_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, task.task_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"nTUgk1XUn0/MVASM3Hgjj53PmsY=\");\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TasksPage","_s","overdueTasks","setOverdueTasks","todaysTasks","setTodaysTasks","upcomingTasks","setUpcomingTasks","token","localStorage","getItem","fetch","then","response","ok","Error","json","data","overdue","today","upcoming","catch","error","console","toggleTaskStatus","taskId","updateTaskInList","tasks","map","task","task_id","status","prevTasks","method","credentials","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","name","_c","$RefreshReg$"],"sources":["/app/src/components/TaskPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst TasksPage = () => {\n  const [overdueTasks, setOverdueTasks] = useState([]);\n  const [todaysTasks, setTodaysTasks] = useState([]);\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5001/tasks\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setOverdueTasks(data.overdue || []);\n        setTodaysTasks(data.today || []);\n        setUpcomingTasks(data.upcoming || []);\n      })\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  const toggleTaskStatus = async (taskId) => {\n    const updateTaskInList = (tasks) =>\n      tasks.map((task) =>\n        task.task_id === taskId\n          ? {\n              ...task,\n              status: task.status === \"not done\" ? \"completed\" : \"not done\",\n            }\n          : task\n      );\n\n    setOverdueTasks((prevTasks) => updateTaskInList(prevTasks));\n    setTodaysTasks((prevTasks) => updateTaskInList(prevTasks));\n    setUpcomingTasks((prevTasks) => updateTaskInList(prevTasks));\n\n    await fetch(`http://localhost:5001/tasks/${taskId}/toggle`, {\n      method: \"PATCH\",\n      credentials: true,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Task updated:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error updating task status:\", error);\n        setOverdueTasks((prevTasks) => updateTaskInList(prevTasks));\n        setTodaysTasks((prevTasks) => updateTaskInList(prevTasks));\n        setUpcomingTasks((prevTasks) => updateTaskInList(prevTasks));\n      });\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Tasks</h1>\n      <div className=\"task-container\">\n        <section className=\"today-tasks\">\n          <h2>Today's Tasks</h2>\n          <ul>\n            {todaysTasks.map((task) => (\n              <li key={task.task_id}>\n                <span\n                  className={`task-status ${\n                    task.status === \"completed\" ? \"completed\" : \"not-done\"\n                  }`}\n                  onClick={() => toggleTaskStatus(task.task_id)}\n                ></span>\n                <span>{task.name}</span>\n              </li>\n            ))}\n          </ul>\n        </section>\n        <section className=\"overdue-tasks\">\n          <h2>Overdue Tasks</h2>\n          <ul>\n            {overdueTasks.map((task) => (\n              <li key={task.task_id}>\n                <span\n                  className={`task-status ${\n                    task.status === \"completed\" ? \"completed\" : \"not-done\"\n                  }`}\n                  onClick={() => toggleTaskStatus(task.task_id)}\n                ></span>\n                <span>{task.name}</span>\n              </li>\n            ))}\n          </ul>\n        </section>\n        <section className=\"upcoming-tasks\">\n          <h2>Upcoming Tasks</h2>\n          <ul>\n            {upcomingTasks.map((task) => (\n              <li key={task.task_id}>\n                <span\n                  className={`task-status ${\n                    task.status === \"completed\" ? \"completed\" : \"not-done\"\n                  }`}\n                  onClick={() => toggleTaskStatus(task.task_id)}\n                ></span>\n                <span>{task.name}</span>\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}